%COT
The following exercise is about the 'Sussman anomaly': three blocks (labeled A, B, and C) rest on a table. The blocks must be stacked such that block A is atop block B, and block B is atop block C. The problem starts with the following configuration:

[B], [A, C], []

    Block B is on the table in Stack 1 at the first position.
    Block C (second position in stack2) is atop block A (first position), both in Stack 2.
    Stack 3 is empty.

A valid move is popping C from Stack 2 and pushing it onto Stack 3:

[B], [A], [C]

An INVALID move would be popping A because it is not at the end of the array.

The goal configuration is [C, B, A] in one of the stacks, where C is at the bottom, B is in the middle, and A is on top. Blocks can only be moved one at a time, and each move follows a LIFO (Last In, First Out) policy:

    A push operation adds an element only at the end of the array (no insertion in the middle).
    A pop operation removes an element only from the end of the array.

Solve this problem, following the restraints and going on untill the exact solution is reached or the 19th step is reached.
%%
Now format the next output so that only the steps you used in the previous answer are present in the form: stack1,stack2,stack3 (example: "[B,C],[],[A]"), with each step separated by a semicolon character. Do not add any other letters.
%%%%